/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExportGUI.java
 *
 * Created on Mar 1, 2012, 11:37:13 AM
 */

package org.scouting.export;

import java.io.File;
import javax.swing.DefaultComboBoxModel;

/*
 * @author aoneill
 * @note Made by the Netbeans built-in GUI creator
 */
public class ExportGUI extends javax.swing.JFrame
{
    private static final int FILE_TYPE_TXT = 1;
    private static final int FILE_TYPE_PPT = 2;

    private static String exportName;
    private static String exportLocation;
    private static int exportFileType;
    private static String allData[][];

    private static String fileTypes[] = {"Text File (.txt)", "Microsoft Powerpoint (.ppt)"};
    private static String currentDir = System.getProperty("user.dir");

    /** Creates new form ExportGUI */
    public ExportGUI() {}

    public ExportGUI(String teamData[][])
    {
        initComponents();

        allData = teamData;

        whereBox.setText(currentDir);
        
        fileExplorer = new javax.swing.JFileChooser();
        fileExplorer.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        formatComboBox.setModel(new DefaultComboBoxModel(fileTypes));

        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        fileName = new javax.swing.JTextField();
        whereLabel = new javax.swing.JLabel();
        whereBox = new javax.swing.JTextField();
        bowseBox = new javax.swing.JButton();
        formatPanel = new javax.swing.JPanel();
        formatComboBox = new javax.swing.JComboBox();
        exportButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Export");

        nameLabel.setText("Name:");

        fileName.setText("Export");

        whereLabel.setText("Where:");

        bowseBox.setText("Browse");
        bowseBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowseBoxActionPerformed(evt);
            }
        });

        formatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Format"));

        formatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Text File (.txt)", "Microsoft Powerpoint (.ppt)" }));

        org.jdesktop.layout.GroupLayout formatPanelLayout = new org.jdesktop.layout.GroupLayout(formatPanel);
        formatPanel.setLayout(formatPanelLayout);
        formatPanelLayout.setHorizontalGroup(
            formatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(formatPanelLayout.createSequentialGroup()
                .add(26, 26, 26)
                .add(formatComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(246, Short.MAX_VALUE))
        );
        formatPanelLayout.setVerticalGroup(
            formatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(formatPanelLayout.createSequentialGroup()
                .add(formatComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(formatPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(nameLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fileName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(whereLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(whereBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 362, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bowseBox))
                    .add(exportButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nameLabel)
                    .add(fileName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(whereBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(whereLabel)
                    .add(bowseBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(formatPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(exportButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);

        exportName = fileName.getText();
        exportLocation = whereBox.getText();

        exportFileType = formatComboBox.getSelectedItem().toString().equals(fileTypes[0]) ?
            FILE_TYPE_TXT : FILE_TYPE_PPT;

        switch(exportFileType)
        {
            case FILE_TYPE_TXT:
                TextFileExport tfex = new TextFileExport(allData, exportName, exportLocation);
                break;

            case FILE_TYPE_PPT:
                PowerPointExport pptex = new PowerPointExport(allData, exportName, exportLocation);
                break;

            default:
                break;
        }

    }//GEN-LAST:event_exportButtonActionPerformed

    private void bowseBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowseBoxActionPerformed
        // TODO add your handling code here:
        fileExplorer.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int returnVal = fileExplorer.showOpenDialog(this);
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION)
        {
            try
            {
                 exportLocation = fileExplorer.getSelectedFile().getPath();
                 whereBox.setText(exportLocation);
            }
            catch(Exception e) {}
        }

    }//GEN-LAST:event_bowseBoxActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bowseBox;
    private javax.swing.JButton exportButton;
    private javax.swing.JTextField fileName;
    private javax.swing.JComboBox formatComboBox;
    private javax.swing.JPanel formatPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField whereBox;
    private javax.swing.JLabel whereLabel;
    // End of variables declaration//GEN-END:variables

    private javax.swing.JFileChooser fileExplorer;
}
